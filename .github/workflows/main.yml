name: Java CI/CD Pipeline

on:
  pull_request:
    branches: [main]

jobs:
  build:
    runs-on: ubuntu-latest
    services:
      postgres:
        image: postgres:latest
        env:
          POSTGRES_USER: postgresql
          POSTGRES_PASSWORD: root
          POSTGRES_DB: lesson13_db
        ports:
          - 5433:5432
        options: >-
          --health-cmd "pg_isready -U postgresql" 
          --health-interval 10s 
          --health-timeout 5s 
          --health-retries 5

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up JDK
        uses: actions/setup-java@v2
        with:
          distribution: 'temurin'
          java-version: '17'

      - name: Cache Gradle packages
        uses: actions/cache@v2
        with:
          path: ~/.gradle/caches
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
          restore-keys: |
            ${{ runner.os }}-gradle-

      - name: Build with Gradle
        run: ./gradlew build --no-daemon

      - name: Run tests with Gradle
        env:
          DB_HOST: localhost
          DB_PORT: 5432
          DB_NAME: lesson13_db
          DB_USER: postgresql
          DB_PASSWORD: root
        run: ./gradlew test --no-daemon

      - name: Generate test coverage report with JaCoCo
        run: ./gradlew jacocoTestReport

      - name: Static analysis with SpotBugs
        run: ./gradlew spotbugsMain

      - name: Build Docker image
        run: docker build -t ghcr.io/${{ github.repository }}/lesson13_app:latest .

      - name: Log in to GitHub Packages
        run: echo "${{ secrets.GITHUB_TOKEN }}" | docker login ghcr.io -u ${{ github.actor }} --password-stdin

      - name: Push Docker image to GitHub Packages
        run: docker push ghcr.io/${{ github.repository }}/lesson13_app:latest
